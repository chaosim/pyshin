2007-12-26 13:09
  | is not used as pipeline operator
  / used for providing value to option.
  cmd %arg1 %arg2
  cmd1<<cmd2>>cmd3  >run execute the CommandCallChain
  
2007-12-25 13:50
  use << and >>, instead of < and > as pipeline operator
  CommandCall knows the execution state of itself.
  to execute the commands by direction of the pipeline.
  process option:
    -o==arg, --opt==arg, -o.arg, --opt,arg, but no o(arg) or opt(arg)
    --o/-option long/short syntax error
    store value of the option
  process cmd.arg, cmd(*arg, **arg)  
  operation on command  produce CommandCall
    __sub__, __call__, __getattr__, __mod__, __div,  
  
2007-12-20 21:01
  CommandClass:
    "class SomeCommand(Command)" produces an instance of CommandClass
    CommandClass.__call__ produces CommandCall
    options should be in options of  the command
    "Method" in the command is just a function and becomes true method of the 
      instance of CommandCall
  CommandCall:
    Pipeline operators | > < produce CommandCallChain
    The output of the previous call becomes the input of next call
    "cmd -o" adds the option o to cmd.options
    Meeting with options repeated raises RepeatOptionError
    The option followed after commandcall must be an option of the Command, otherwise raises InvalidOption
  
2007-12-16 20:59
  Basic concepts of CommandClass-Command, CommandCall, Option shaped up 